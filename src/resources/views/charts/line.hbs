<div class="mt-4">
  <img src="https://ielts-nguyenhuyen.com/wp-content/uploads/2018/01/cach-lam-ielts-writing-task-1-line-graph.png" class="card-img-top" alt="Line chart" />
  <div class="detail-place">
    <h1 style="text-align: center;" class="card-title">LINE CHART</h1>
    <p
      class="chart-description"
      style="font-size: 18px;"
    >The line chart, or line graph, connects several distinct data points, presenting them as one continuous evolution. Use line charts to view trends in data, usually over time (like stock price changes over five years or website page views for the month). The result is a simple, straightforward way to visualize changes in one value relative to another.</p>
  </div>

{{!-- Examle place --}}
  <div class="example-place">
    <h2 >Here is your chart</h2>
    <div>
        <div class="chart-box">
            <canvas id="exChart"></canvas>
        </div>
        <div>
            <button id="btnDownload" class="btn btn-primary download-btn">Download</button>
        </div>
        <h4 class="mt-4">Config</h4>
        <div class="change-group">
            <h5 class="mt-4">Change title</h5>
            <input onkeyup="updateLabel(this)" id="title" class="form-control form-config" onchange="changetitle()"   type="text" placeholder="My Chart">
            <input onkeyup="updateLabel(this)" id="label1" class="form-control form-config" onchange="changeLabel1()"  type="text" placeholder="1st dataset">
            <input onkeyup="updateLabel(this)" id="label2" class="form-control form-config" onchange="changeLabel2()"  type="text" placeholder="2nd dataset">
            <div class="btn-group">
                <button class="divider btn btn-outline-success  dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">Change chart to</button>
                <ul class="dropdown-menu">
                        {{!-- <li ><a id="bar" class="dropdown-item" onclick="changeRadar()">Radar chart</a></li> --}}
                        <li ><a id="bubble" class="dropdown-item" onclick="changeBubble()">Bubble chart</a></li>
                </ul>
                <button class="divider btn btn-outline-danger" style="display:none" id="line" onclick="goBack()">Go back!!</button>
            </div>        
        </div>  
    </div>
    <div class="change-group">
        <h5 class="mt-4">Change data</h5>
        <input type="number" min="1" id="inputplace1" class="form-control form-config" placeholder="Change place: 1 is the leftmost">
        <input type="number" id="inputdata1" class="form-control form-config2" placeholder="5" >
        <input type="text" id="inputcolor1" class="form-control form-config2"  placeholder="Color: Pink">
        <input type="text" id="inputlabel1" class="form-control form-config2" onkeydown="return /[a-z]/i.test(event.key)" placeholder="January">
        <button id="insertdata" class="btn btn-success" onclick="changeData1()">Add data in 1st dataset</button> <br>
        <div class="divider"></div>
        <i>Your color can whether be in hex, text or rgb format. Choose your color </i>
        <a class="choose-color" href="https://www.rapidtables.com/web/color/color-scheme.html" target="_blank">here</a> <br>
        <div class="divider"></div>
        <input type="number" min="1" id="inputplace2" class="form-control form-config" placeholder="Change place: 1 is the leftmost">
        <input type="number" id="inputdata2" class="form-control form-config2" placeholder="5" >
        <input type="text" id="inputcolor2" class="form-control form-config2"  placeholder="Color: Pink">
        <input type="text" id="inputlabel2" class="form-control form-config2" onkeydown="return /[a-z]/i.test(event.key)" placeholder="January">
        <button id="insertdata" class="btn btn-success" onclick="changeData2()">Add data in 2nd dataset</button> <br>

        <h5 class="mt-4">Delete data</h5>
        <input type="number" min="1" id="deleteplace1" class="form-control form-config" placeholder="Delete place: 1 is the leftmost ">
        <button id="removedata1" class="btn btn-danger" onclick="removeData1()">Remove data in 1st dataset</button> <br>
        <div class="divider"></div>
        <input type="number" min="1" id="deleteplace2" class="form-control form-config" placeholder="Delete place: 1 is the leftmost ">
        <button id="removedata2" class="btn btn-danger" onclick="removeData2()">Remove data in 2nd dataset</button>
    </div>
    <div class="mt-4">
        {{!-- <button onclick="hideTable()" id="hide" style="display:none" class="btn btn-outline-danger table-toggle">Hide the table data</button>
        <button onclick="showTable()"  class="btn btn-outline-success table-toggle">Show the table data</button> --}}
    </div>
    {{!-- Data table --}}
    <table id="info"  class="table mt-4" style="display:none">
        <thead class="table-info">
            <tr>
                <td>Labels</td>
                <td>1st Data</td>
                <td>2nd Data</td>
            </tr>
        </thead>
        <tbody id="tabledata">
            {{!-- <tr>
                <th scope="row">1</th>
                <td>Mark</td>
            </tr> --}}
        </tbody>
    </table>
  </div>
  <script>
    const labels = [ 'January', 'February', 'March', 'April', 'May', 'June', 'July' ];
    const data = { 
        labels: labels, 
        datasets: [{ //0
                label: '1st dataset',
                backgroundColor: 'rgb(255, 99, 132, 0.2)', 
                borderColor: 'rgb(255, 99, 132)',
                data: [5, 10, 5, 2, 20, 30, 45],
                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'] ,
            },{ //1
                label: '2nd dataset',
                backgroundColor: 'rgb(54, 162, 235, 0.2)', 
                borderColor: 'rgb(54, 162, 235)',
                data: [15, 12, 25, 12, 15, 40, 25],  
                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'] ,  
            }] 
    }; 
    const bgColor = {
        id: 'bgColor',
        beforeDraw: (chart, options) =>{
            const {ctx, width, height} = chart
            ctx.fillStyle = 'white'
            ctx.fillRect(0,0,width,height)
            ctx.restore();
        }
    };
    const config = { 
        type: 'line',
        data: data, 
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                },
                title: {
                    display: true,
                    text: 'My Chart',
                    font: {
                        size: 30,
                    }
                }
            }
            
        },
        
        plugins: [bgColor],  
    };
  </script>
  <script>
   // render chart
    const exChart = new Chart( 
        document.getElementById('exChart'), 
        config 
    );

    // Change Chart type 
    function changeRadar(){
        const x = document.getElementById("line")
        x.style.display = "inline-block"
        const updatetype = 'radar'
        exChart.config.type = updatetype
        exChart.config.options.scales.x.display = false
        exChart.config.options.scales.y.display = false
        exChart.update()
    }
    function changeBubble(){
        const x = document.getElementById("line")
        x.style.display = "block"
        const updatetype = 'bubble'
        exChart.config.type = updatetype
        exChart.update()
    }
    function goBack(){
        //const y = document.getElementById("bar")
        const z = document.getElementById("line")
        z.style.display = "none"
        const updatetype = 'line'
        exChart.config.type = updatetype
        exChart.config.options.scales.x.display = true
        exChart.config.options.scales.y.display = true
        exChart.update()  
    }

    //Show/Hide table data
    function showTable(){
        const x = document.getElementById("hide")
        const z = document.getElementById("info")
        x.style.display = "block"
        z.style.display = "table"
    }
    function hideTable(){
        const x = document.getElementById("hide")
        const z = document.getElementById("info")
        x.style.display = "none"
        z.style.display = "none"
    }
    //Change title
    function changetitle(){
        const x = document.getElementById("title")
        exChart.config.options.plugins.title.text = x.value
        exChart.update()
    }
    //Change label
    function changeLabel1(){
        const x = document.getElementById("label1")
        exChart.config.data.datasets[0].label = x.value
        exChart.update()
    }
    function changeLabel2(){
        const x = document.getElementById("label2")
        exChart.config.data.datasets[1].label = x.value
        exChart.update()
    }
    //Download chart
    const btnDownload = document.querySelector("#btnDownload")
    const downloadChart = document.querySelector("#exChart")
    btnDownload.addEventListener("click", function(){
            //IE-Edge Support (PNG only)
            if(window.navigator.msSaveBlob){
                window.navigator.msSaveBlob(downloadChart.msToBlob(),"chart-imgae.png")
            } else{
                const a = document.createElement("a")
                document.body.appendChild(a)
                a.href = downloadChart.toDataURL("image/png")
                a.download = "chart-image.png"
                a.click()
                document.body.removeChild(a)
            }
        })
    //Change data
    function changeData1(){
        const inputdata = document.getElementById('inputdata1')
        const inputplace = document.getElementById('inputplace1')
        const inputcolor = document.getElementById('inputcolor1')
        const inputlabel = document.getElementById('inputlabel1')
        exChart.data.datasets[0].data[(inputplace.value-1)] = inputdata.value
        exChart.data.datasets[0].borderColor = inputcolor.value
        exChart.data.labels[(inputplace.value-1)] = inputlabel.value
        exChart.resize()
        exChart.update()
    }
    function changeData2(){
        const inputdata = document.getElementById('inputdata2')
        const inputplace = document.getElementById('inputplace2')
        const inputcolor = document.getElementById('inputcolor2')
        const inputlabel = document.getElementById('inputlabel2')
        exChart.data.datasets[1].data[(inputplace.value-1)] = inputdata.value
        exChart.data.datasets[1].borderColor = inputcolor.value
        exChart.data.labels[(inputplace.value-1)] = inputlabel.value
        exChart.resize()
        exChart.update()
    }

    //Remove data
    function removeData1(){
        const deleteplace = document.getElementById('deleteplace1')
        exChart.data.datasets[0].data.splice((deleteplace.value-1),1)
        {{!-- exChart.data.labels.splice((deleteplace.value-1),1) --}}
        exChart.update()
    }
    function removeData2(){
        const deleteplace = document.getElementById('deleteplace2')
        exChart.data.datasets[1].data.splice((deleteplace.value-1),1)
        {{!-- exChart.data.labels.splice((deleteplace.value-1),1) --}}
        exChart.update()
    }

    //Display data
    const tabledata = document.getElementById("tabledata")
    for( i = 0; i < exChart.data.labels.length; i++){
        const tabledatatr = document.createElement("tr")
        const tabledatatd = document.createElement("td")
        const tabledatatd2 = document.createElement("td")
        const tabledatatd3 = document.createElement("td")
        tabledatatd2.style.color = exChart.data.datasets[0].borderColor
        tabledatatd3.style.color = exChart.data.datasets[1].borderColor
        //append the matching pair
        const labeltext = document.createTextNode(exChart.data.labels[i])
        const datapoint = document.createTextNode(exChart.data.datasets[0].data[i])
        const datapoint2 = document.createTextNode(exChart.data.datasets[1].data[i])
        tabledatatd.appendChild(labeltext)
        tabledatatd2.appendChild(datapoint)
        tabledatatd3.appendChild(datapoint2)
        //append the children
        tabledata.appendChild(tabledatatr)
        tabledatatr.appendChild(tabledatatd)
        tabledatatr.appendChild(tabledatatd2)
        tabledatatr.appendChild(tabledatatd3)
    }
  </script>


</div>
<style>
  body{ 

  } 
  .card-img-top{ 
      display: block; 
      margin-left: auto; 
      margin-right: auto;
        max-width: 40%; 
        height:auto; 
        align-items: center; 
  } 
  .book-place{ 
      width:35%;
  float:right; 
  margin-right: 12px; 
  } 
  .book-btn{ 
    font-size: 24px; 
    color: black;
    text-decoration: none; 
    margin-top: 80px; 
    margin-left: -70%; 
    background: none;
    border: 0; 
    display: block; 
    margin: 20px auto; 
    border: 2px solid rgb(39, 160,39); 
    padding: 15px 30px; 
    width: 150px; 
    outline: none; 
    font-weight: 500;
    border-radius: 1.5rem; 
    transition: 0.25s; cursor: pointer; 
  } 
  .book-btn:hover{
    background: linear-gradient(#79df79, #276e27); border: 0; } .detail-place{
    margin-left: 12px; 
  } 
  .chart-description{ 
      margin-left: 160px; 
      margin-right: 160px; 
}
    .example-place{
        margin-left: 160px; 
        margin-right: 160px; 
    }
    .chart-box{
        margin-right: auto;
        margin-left:auto;
        width: 100%; 
        padding: 20px;
        border-radius: 20px;
        border: solid 2px rgba(255, 26, 104, 1);
        background: white;
        display: block;
        align-items: center;
    }
    .draw-place{
        margin-left: 160px; 
        margin-right: 160px; 
    }
    .download-btn{
        float: right;
        margin-top: 8px;
        margin-bottom: 8px;
    }
    .change-group{
        display: inline-block;
    }
    .form-config{
        width: 30%;
        display: inline-block;
    }
    .form-config2{
        width: 15%;
        display: inline-block;
    }
    .btn-group{
        display: inline-block;
    }
    .divider{
        margin-top: 8px;
    }
    .table{
        text-align: center;
    }
    .dropdown-menu{
       
    }
    .table-toggle{
        float: right;
        margin-right: 6px;
        margin-bottom: 8px;
    }
    .dropdown-item:hover{
        cursor: pointer;
        background-color: #1bbd29;
    }
</style>